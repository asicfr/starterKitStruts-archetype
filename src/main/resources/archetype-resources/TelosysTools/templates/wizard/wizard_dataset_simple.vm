/*
 * Dataset class 
 * Created on $today.date ( Time $today.time )
 */

package $class.package;

import org.objectweb.telosys.common.TelosysException;
import org.objectweb.telosys.common.TelosysRuntimeException;
import org.objectweb.telosys.dal.dataset.SQLDataSet;
import org.objectweb.telosys.dal.dataset.SQLDataSetDefinition;

/**
 * @author ...
 *
 */
public class $class.name
{
    //-------------------------------------------------------------------------------------
    // SQL request 
    //-------------------------------------------------------------------------------------
    private static final String SQL_SELECT = "$context.select" ; 
    private static final String SQL_FROM   = "$context.from" ; 
    private static final String SQL_WHERE  = "$context.where" ; 
    private static final String SQL_END    = "$context.option" ; 

    //-------------------------------------------------------------------------------------
    // Private methods 
    //-------------------------------------------------------------------------------------
    /**
     * Internal DataSet factory
     * @param criteria
     * @return
     * @throws TelosysException
     */
    private static SQLDataSet createDataSet() //throws TelosysException
    {
        SQLDataSet ds = null ;
        SQLDataSetDefinition definition = new SQLDataSetDefinition(SQL_SELECT, SQL_FROM, SQL_WHERE, SQL_END);
        try
        {
            ds = new SQLDataSet(definition);
        } catch (Exception e)
        {
            throw new TelosysRuntimeException("Cannot create SQLDataSet", e);
        }
        return ds ;
    }
    
    /**
     * Generic load with/without dynamic criteria, with/without database id
     * @param criteria
     * @param oDbId
     * @return
     */
    private static SQLDataSet load(Object oDbId)
    {
        SQLDataSet ds = null ;
        try {
            //--- new DataSet instance 
            ds = createDataSet();
            if ( oDbId != null )
            {
                ds.load( oDbId );
            }
            else
            {
                ds.load();
            }
        }
        catch ( Exception ex )
        {
            throw new TelosysRuntimeException("Cannot load SQLDataSet", ex);
        }
        return ds;
    }
    
    //-------------------------------------------------------------------------------------
    // Public methods 
    //-------------------------------------------------------------------------------------
    /**
     * Creates a new SQLDataSet instance 
     * The DataSet returned is empty
     * @return
     */
    public static SQLDataSet getDataSet() 
    {        
        return createDataSet() ;
    }

    //-------------------------------------------------------------------------------------
    /**
     * Load a Dataset without dynamic criteria, from the default database
     * @return
     */
    public static SQLDataSet load()
    {
        return load(null);
    }
    
    /**
     * Load a Dataset without dynamic criteria, from the given database id
     * @param db
     * @return
     */
    public static SQLDataSet load( int db )
    {
        return load(new Integer(db));
    }
    
}
